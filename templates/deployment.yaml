apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitlab
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: gitlab
        tier: webService
    spec:
      initContainers:
        - name: init-gitlab-data
          image: gitlab/gitlab-ce:18.0.1-ce.0
          command: ["/bin/sh", "-c"]
          args:
            - |
              # 1. /mnt/gitlab-opt 초기화 로직
              echo "Checking if /mnt/gitlab-opt is empty..."
              if [ -z "$(ls -A /mnt/gitlab-opt)" ]; then
                echo "Empty, initializing with default content..."
                # GitLab 이미지 내의 기본 /var/opt/gitlab 내용을 /mnt/gitlab-opt로 복사
                cp -a /var/opt/gitlab/. /mnt/gitlab-opt/
              else
                echo "Already initialized. Skipping copy."
              fi

              # 2. /mnt/gitlab-etc 초기화 로직 (간소화)
              echo "Ensuring /mnt/gitlab-etc is ready for gitlab.rb configuration."
              echo "Preparing gitlab.rb for secret injection..."
              if [ -f "/mnt/gitlab-etc/gitlab.rb" ]; then
                echo "Existing gitlab.rb found in /mnt/gitlab-etc. Using it as base."
                cp /mnt/gitlab-etc/gitlab.rb /tmp/gitlab.rb.template
              else
                echo "No existing gitlab.rb in /mnt/gitlab-etc. Using ConfigMap template."
                # "cp: cannot stat '/mnt/gitlab/gitlab.rb': No such file or directory" 오류 해결
                # 정확한 ConfigMap 마운트 경로 사용
                cp /mnt/gitlab-config/gitlab.rb /tmp/gitlab.rb.template
              fi

              # 3. Secret 값 읽기 및 gitlab.rb 동적 수정
              echo "Updating gitlab.rb with secrets..."
              # /mnt/gitlab-secrets (올바른 mountPath)에서 Secret 값을 읽어옴.
              INITIAL_ROOT_PASSWORD=$(cat /mnt/gitlab-secrets/initial_root_password)
              SMTP_PASSWORD=$(cat /mnt/gitlab-secrets/smtp_password)
              POSTGRESQL_PASSWORD=$(cat /mnt/gitlab-secrets/postgresql_password)

              # 플레이스홀더를 실제 Secret 값으로 대체
              sed -i "s|SECRET_PLACEHOLDER_INITIAL_ROOT_PASSWORD|$INITIAL_ROOT_PASSWORD|g" /tmp/gitlab.rb.template
              sed -i "s|SECRET_PLACEHOLDER_SMTP_PASSWORD|$SMTP_PASSWORD|g" /tmp/gitlab.rb.template
              sed -i "s|SECRET_PLACEHOLDER_POSTGRESQL_PASSWORD|$POSTGRESQL_PASSWORD|g" /tmp/gitlab.rb.template

              # 수정된 gitlab.rb 파일을 영구 볼륨 (etcPersistence)에 저장
              cp /tmp/gitlab.rb.template /mnt/gitlab-etc/gitlab.rb
              echo "gitlab.rb updated successfully."

          volumeMounts:
            - name: gitlab-secrets
              mountPath: /mnt/gitlab-secrets
            - name: gitlab-config
              mountPath: /mnt/gitlab-config/gitlab.rb
              subPath: gitlab.rb
            - name: gitlab-opt
              mountPath: /mnt/gitlab-opt
            - name: gitlab-etc
              mountPath: /mnt/gitlab-etc
      containers:
        - name: gitlab
          image: gitlab/gitlab-ce:18.0.1-ce.0
          ports:
            - containerPort: 80
            - containerPort: 443
            - containerPort: 22
          volumeMounts:
            {{- if .Values.gitlab.persistence.enabled }}
            - name: gitlab-opt
              mountPath: "/var/opt/gitlab"
            {{- end }}
            - name: gitlab-etc
              mountPath: /etc/gitlab/
            {{- if .Values.gitlab.shmVolume.enabled }}
            - name: shm
              mountPath: /dev/shm
            {{- end }}
      volumes:
        - name: gitlab-config
          configMap:
            name: gitlab-config
        {{- if .Values.gitlab.persistence.enabled }}
        - name: gitlab-opt
          persistentVolumeClaim:
            claimName: {{ .Values.gitlab.persistence.volumeName | default "gitlab-opt-claim" }}
        {{- end }}
        - name: gitlab-etc
          persistentVolumeClaim:
            claimName: {{ .Values.gitlab.etcPersistence.volumeName | default "gitlab-etc-claim" }}
        {{- if .Values.gitlab.shmVolume.enabled }}
        - name: shm
          emptyDir:
            medium: Memory
            {{- if .Values.gitlab.shmVolume.sizeLimit }}
            sizeLimit: {{ .Values.gitlab.shmVolume.sizeLimit }}
            {{- end }}
        {{- end }}
        - name: gitlab-secrets
          secret:
            secretName: gitlab-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: gitlab-service
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: gitlab
    tier: webService
  ports:
    - name: http
      port: 80
      targetPort: 80
    - name: https
      port: 443
      targetPort: 443
    - name: ssh
      port: 2222
      targetPort: 22
  type: ClusterIP